{"version":3,"file":"component---src-pages-schedule-js-30a7fd23eee5a3ca2a36.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/events-item.js","webpack://gatsby-starter-default/./src/components/events.module.sass","webpack://gatsby-starter-default/./src/components/events-table.js","webpack://gatsby-starter-default/./src/components/big-switch.js","webpack://gatsby-starter-default/./src/components/bigswitch.module.sass","webpack://gatsby-starter-default/./src/pages/schedule.js","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-force-update.mjs"],"sourcesContent":["import React from \"react\"\nimport * as eventStyles from \"./events.module.sass\"\nimport { Link } from \"gatsby\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { HiOutlineExternalLink } from \"react-icons/hi\"\nimport { HiOutlineLink } from \"react-icons/hi\"\n\nconst EventItem = ({event, i}) => {\n    return (\n        <motion.div \n        key={`${event.title}+${event.dateFormatted}`}\n        custom={i}\n        initial=\"hidden\"\n        animate=\"enter\"\n        exit=\"exit\"\n        variants={variants}\n        >\n            <div className={eventStyles.row}>\n                <div className={eventStyles.date}>\n                    <span className='nowrap'>{event.dateFormatted}</span> {event.endDateFormatted && <>&nbsp;â€” <span className='nowrap'>{event.endDateFormatted}</span></>}\n                </div>\n                <div className={eventStyles.location}>\n                    {event.location}\n                </div>\n                <div className={eventStyles.description}>\n                    <div className={eventStyles.title}>{event.title}</div>\n                    {event.description}\n                </div>\n                <div className={eventStyles.actions}>\n                    {event.link && <Link target=\"_blank\" to={event.link} alt=\"Details\">\n                        <span className={eventStyles.actionsText}>Event Details</span> <HiOutlineExternalLink />\n                    </Link>}\n                </div>\n            </div>\n        </motion.div>\n    )\n}\n\nconst variants = {\n    enter: i => ({\n        opacity: 1,\n        y: 0,\n        transition: {\n            delay: i*0.05,\n            duration: .3\n        }\n    }),\n    exit: {\n      opacity: 0,\n      backgroundColor: \"red\",\n    },\n    hidden: {\n        opacity: 0,\n        y: 30\n    }\n  }\n  \n\nexport default EventItem","// extracted by mini-css-extract-plugin\nexport var actions = \"events-module--actions--dc3cb\";\nexport var actionsText = \"events-module--actions-text--6830b\";\nexport var date = \"events-module--date--1b94a\";\nexport var description = \"events-module--description--73819\";\nexport var location = \"events-module--location--87cb9\";\nexport var nowrap = \"events-module--nowrap--0f27c\";\nexport var row = \"events-module--row--e47e7\";\nexport var title = \"events-module--title--5eb8d\";","import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport EventsItem from \"./events-item\"\n\n// var showing\n// 0 = upcoming events, 1 = past events\nconst EventsTable = ({ data={}, showing=0, limit=99 }) => {\n  const [upcomingEvents, pastEvents] = getEventData(data);\n  const events = (showing===0) ? upcomingEvents : pastEvents;\n\n  return (\n    <div>\n      { events.slice(0, limit).map((event, i) => (\n        <AnimatePresence exitBeforeEnter>\n            <EventsItem event={event} i={i}/>\n        </AnimatePresence>\n      ))}\n    </div>\n  )\n\n}\n\nconst getEventData = function (data) {\n  //TODO: Add \"link\" to graphql\n\n  // Arrays of events\n  let allEvents = [];\n  let upcomingEvents = [];\n  let pastEvents = [];\n\n  if (data) {\n    allEvents = data.allGoogleScheduleSheet.nodes;\n    const timeFormat = {timeStyle: 'short', hour12: true}; // 3:30 AM\n    const dateFormat = {month: 'short', day: 'numeric'}; // Jan 30\n    const dateFormatWithYear = {month: 'short', day: 'numeric', year: 'numeric'}; // Jan 30 2012\n\n    // Comparisons\n    const currentYear = new Date().getFullYear();\n    const now = Date.now()\n\n    allEvents.forEach(event => {\n      // Created a formatted time for cal\n      // Documentation here: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\n      const date = new Date(event.date);\n      event.date = date; //event.date is an object so we can use in compare functions\n\n      const dateFormatStr = (date.getFullYear() == currentYear) ? dateFormat : dateFormatWithYear;\n      event.dateFormatted = date.toLocaleDateString([], dateFormatStr);\n\n      if (event.start) {\n        const start = new Date(event.date + ' ' + event.start);\n        event.startFormatted = start.toLocaleTimeString([], timeFormat);\n      }\n\n      if (event.endDate) {\n        const endDate = new Date(event.endDate);\n        event.endDateFormatted = endDate.toLocaleDateString([], dateFormatStr);\n      }\n\n      if (date.getTime() >= now) \n        upcomingEvents.push(event);\n      else \n        pastEvents.push(event);\n    });\n  }\n\n  //sort by date\n  upcomingEvents.sort((a, b) => a.date - b.date); // Ascending\n  pastEvents.sort((a, b) => b.date - a.date); // Descending\n\n  return [upcomingEvents, pastEvents];\n}\n\nexport default EventsTable","import React from \"react\"\nimport * as bsStyles from \"./bigswitch.module.sass\"\n\nconst BigSwitch = ({options, activeIndex, setActiveIndex}) => (\n    <div className={bsStyles.container}>\n        {options.map( (option, index) => (\n            <div \n                onClick={() => setActiveIndex(index)} \n                className={`${bsStyles.option} ${index==activeIndex ? bsStyles.active : ''}`}\n            >\n                {option}\n            </div>\n        ))}\n    </div>\n);\n\nexport default BigSwitch","// extracted by mini-css-extract-plugin\nexport var active = \"bigswitch-module--active--37a32\";\nexport var container = \"bigswitch-module--container--9a18c\";\nexport var option = \"bigswitch-module--option--76ecc\";","//Import React\nimport React, {useState, useEffect} from \"react\"\nimport { graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport { motion, AnimatePresence } from \"framer-motion\"\n\nimport Layout from \"../components/layout\"\nimport EventsItem from \"../components/events-item\"\nimport SEO from \"../components/seo\"\nimport BigSwitch from \"../components/big-switch\"\nimport EventsTable from \"../components/events-table\"\n\n/*\n  Schema for an event\n  Datetime start/end (+time zone)\n  Location\n  Name of performance\n  Description (txt)\n*/\nconst SchedulePage = ({data}) => {\n  // State variable for upcoming/past\n  const [showing, setShowing] = useState(0);\n\n  return (\n    <Layout>\n      <SEO title=\"Upcoming concerts schedule\" />\n\n      <BigSwitch \n        options={[\"Upcoming\", \"Past\"]}\n        activeIndex={showing}\n        setActiveIndex={setShowing}\n      />\n      \n      <EventsTable showing={showing} data={data} />\n\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allGoogleScheduleSheet {\n      nodes {\n        date\n        description\n        endDate\n        location\n        start\n        timestamp\n        title\n        link\n      }\n    }\n  }\n`\n\nexport default SchedulePage","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    var isMounted = useRef(false);\n    useIsomorphicLayoutEffect(function () {\n        isMounted.current = true;\n        return function () {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import { __values } from 'tslib';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useId } from '../../utils/use-id.mjs';\n\nvar PresenceChild = function (_a) {\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n    var presenceChildren = useConstant(newChildrenMap);\n    var id = useId();\n    var context = useMemo(function () { return ({\n        id: id,\n        initial: initial,\n        isPresent: isPresent,\n        custom: custom,\n        onExitComplete: function (childId) {\n            var e_1, _a;\n            presenceChildren.set(childId, true);\n            try {\n                for (var _b = __values(presenceChildren.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var isComplete = _c.value;\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete();\n        },\n        register: function (childId) {\n            presenceChildren.set(childId, false);\n            return function () { return presenceChildren.delete(childId); };\n        },\n    }); }, \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(function () {\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(function () {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { __read, __spreadArray } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { env } from '../../utils/process.mjs';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\n\nvar getChildKey = function (child) { return child.key || \"\"; };\nfunction updateChildLookup(children, allChildren) {\n    children.forEach(function (child) {\n        var key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, function (child) {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nvar AnimatePresence = function (_a) {\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var _d = __read(useForceUpdate(), 1), forceRender = _d[0];\n    var forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    var isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    var childrenToRender = filteredChildren;\n    var exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    var allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    var isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(function () {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(function () {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map(function (child) { return (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = __spreadArray([], __read(childrenToRender), false);\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n        var key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        var child = allChildren.get(key);\n        if (!child)\n            return;\n        var insertionIndex = presentKeys.indexOf(key);\n        var onExit = function () {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n        var key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    if (env !== \"production\" &&\n        exitBeforeEnter &&\n        childrenToRender.length > 1) {\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map(function (child) { return cloneElement(child); })));\n};\n\nexport { AnimatePresence };\n","import { __read } from 'tslib';\nimport sync from 'framesync';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    var isMounted = useIsMounted();\n    var _a = __read(useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    var forceRender = useCallback(function () {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    var deferredForceRender = useCallback(function () { return sync.postRender(forceRender); }, [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n"],"names":["variants","enter","i","opacity","y","transition","delay","duration","exit","backgroundColor","hidden","_ref","event","React","motion","div","key","title","dateFormatted","custom","initial","animate","className","endDateFormatted","location","description","link","Link","target","to","alt","HiOutlineExternalLink","getEventData","data","allEvents","upcomingEvents","pastEvents","allGoogleScheduleSheet","nodes","timeFormat","timeStyle","hour12","dateFormat","month","day","dateFormatWithYear","year","currentYear","Date","getFullYear","now","forEach","date","dateFormatStr","toLocaleDateString","start","startFormatted","toLocaleTimeString","endDate","getTime","push","sort","a","b","showing","limit","events","slice","map","AnimatePresence","exitBeforeEnter","EventsItem","options","activeIndex","setActiveIndex","option","index","onClick","setShowing","useState","Layout","SEO","BigSwitch","EventsTable","useIsMounted","isMounted","useRef","current","PresenceChild","_a","children","isPresent","onExitComplete","presenceAffectsLayout","presenceChildren","newChildrenMap","id","context","useMemo","childId","e_1","set","_b","values","_c","next","done","value","e_1_1","error","return","call","register","delete","undefined","_","size","PresenceContext","Provider","Map","getChildKey","child","_d","forcedRenderCount","setForcedRenderCount","forceRender","useCallback","postRender","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","filteredChildren","filtered","Children","isValidElement","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","presentKeys","targetKeys","numPresent","length","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","console","warn","cloneElement"],"sourceRoot":""}